image: docker:latest
services:
  - docker:dind

variables:
  IMG_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  GIT_STRATEGY: clone

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  - docker pull $IMG_TAG || true
  - apk update && apk add --no-cache git bash

stages:
  - build
  - test
  - release


build_image:
  tags:
    - docker
  stage: build
  script:
    - >
      docker build
      --build-arg STORAGE_HOST
      --build-arg BUCKET_NAME
      --build-arg STORAGE_REMOTE
      --cache-from $IMG_TAG
      -t $IMG_TAG
      .
    - docker push $IMG_TAG
  after_script:
    - docker container prune -f || true
    - docker image prune -f || true


check_nbdev:
  tags:
    - docker
  stage: test
  script:
    - >
      docker run -i --rm
      $IMG_TAG
      /bin/bash -c "
      poetry run nbdev_read_nbs &&
      ./scripts/check_clean_nb.sh &&
      ./scripts/check_lib_diff.sh
      "


run_tests:
  tags:
    - docker
  stage: test
  script:
    - >
      docker run -i --rm
      --env MASTER_TOKEN=$MASTER_TOKEN
      $IMG_TAG
      /bin/bash -c "./scripts/test_nb.sh"

check_lint:
    tags:
      - docker
    stage: test
    script:
      - >
        docker run -i --rm
        --env MASTER_TOKEN=$MASTER_TOKEN
        $IMG_TAG
        /bin/bash -c "./scripts/check_lint.sh"

build_whls_release:
  tags:
    - docker
  stage: release
  when: manual
  script:
    - >
      docker run -i --rm
      $IMG_TAG
      /bin/bash -c "poetry build -f wheel && poetry publish -r palaimon -u $POETRY_HTTP_BASIC_PYPI_USERNAME -p $POETRY_HTTP_BASIC_PYPI_PASSWORD"


build_whls_internal:
  tags:
    - docker
  stage: release
  when: manual
  script:
      - >
        docker run -i $IMG_TAG
        /bin/bash -c "
        poetry config repositories.PYPIPALAIMON ${CI_API_V4_URL}/projects/299/packages/pypi &&
        poetry build -f wheel &&
        poetry publish --repository PYPIPALAIMON -u gitlab-ci-token -p ${CI_JOB_TOKEN}
        "

pages:
  tags:
    - docker
  stage: release
#  only:
#  - master
  script:
    - >
      docker run -i --rm
      -v $(pwd)/public:/app/_build/html
      $IMG_TAG
      /bin/bash -c "poetry run make docs"
    - rm -rf $(pwd)/public/.doctrees
  artifacts:
    paths:
    - public
